name: "Sync to S3"

on:
  workflow_call:
    inputs:
      aws_account:
        description: AWS Account to sync to
        required: true
        type: string
      aws_region:
        description: AWS region to sync to
        required: true
        type: string
      sync_environment:
        description: AWS environment to sync to
        required: true
        type: string
      cache_key:
        description: Key of the previously built and stored cache
        type: string
        default: "built-output"
      deployed_site_url:
        description: URL of the website that will be deployed
        required: true
        type: string
      bucket_name:
        description: Name of the s3 bucket where files should be copied to
        required: true
        type: string
      folder_path:
        description: Folder path within the cache to sync
        type: string
        default: "./"
      acl_policy:
        description: The AWS ACL policy that will be applied to your files
        type: string
        default: public-read

jobs:
  sync-to-s3:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ inputs.sync_environment }}
    concurrency: ${{ inputs.sync_environment }}
    permissions:
      contents: read
      id-token: write
    environment:
      name: ${{ inputs.sync_environment }}
      url: ${{ inputs.deployed_site_url }}
    steps:
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: arn:aws:iam::${{ inputs.aws_account }}:role/GithubDeploymentRole
      - name: Download cached artifacts
        continue-on-error: true
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.cache_key }}
      - name: Install AWS CLI
        if: ${{ success() }}
        uses: unfor19/install-aws-cli-action@master
        with:
          version: "2"
      - name: Sync extracted cached artifacts up to s3
        if: ${{ success() }}
        run: aws s3 sync ${{ inputs.folder_path }} s3://${{ inputs.bucket_name }} --acl ${{ inputs.acl_policy }} --delete
