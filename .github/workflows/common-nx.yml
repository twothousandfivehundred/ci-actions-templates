name: "Common NX"

on:
  workflow_call:
    inputs:
      cache_key:
        description: Key of the previously built and stored cache
        type: string
        default: "built-output"
      folder_path:
        description: Folder path where the built output is stored
        type: string
        default: "dist"
      target_branch_name:
        description: Name of the target branch you will be merging to
        type: string
        required: false
        default: ""
      build_environment:
        description: Type of environment to build for
        type: string
        default: "development"
      aws_region:
        description: AWS region to sync to
        required: true
        type: string
        default: "us-east-1"
jobs:
  common-nx:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ inputs.build_environment }}
      AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Setup the correct node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: "**/package-lock.json"
      - name: Provide credentials for private repo installs
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_SSH }}

      - name: Provide context to target branch
        if: inputs.target_branch_name != ''
        run: "git branch --track ${{ inputs.target_branch_name }} origin/${{ inputs.target_branch_name }}"
      - name: Create SHA's of head and base for affected to work
        uses: nrwl/nx-set-shas@v3
      - name: npm install for CI
        run: npm ci

      - name: Lint nx specific workspace files
        run: npx nx workspace-lint
      - name: Check for unformatted files
        run: npx nx format:check
      - name: Lint affected packages/libs
        run: npx nx affected --target=lint --parallel=3
      - name: Test affected packages/libs
        run: npx nx affected --target=test --parallel=3 --ci --code-coverage
      - name: Build affected packages/libs
        run: npx nx affected --target=build --parallel=3 --configuration=${{ inputs.build_environment }}

      - name: Upload the built output to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.cache_key }}
          retention-days: 1
          path: ${{ inputs.folder_path }}
          if-no-files-found: ignore
