name: "Common NX"

on:
  workflow_call:
    inputs:
      release_space:
        type: string
        default: ""
      cache_key:
        description: Key of the previously built and stored cache
        type: string
        default: "built-output"
      folder_path:
        description: Folder path where the built output is stored
        type: string
        default: "dist"
      target_branch_name:
        description: Name of the target branch you will be merging to
        type: string
        required: false
        default: ""
      build_environment:
        description: Type of environment to build for
        type: string
        default: "development"
      aws_region:
        description: AWS region to sync to
        required: true
        type: string
        default: "us-east-1"
      aws_account:
        description: AWS Account to sync to
        required: true
        type: string
      actor_name:
        description: user who is deploying this stack
        type: string
    outputs:
      services_to_deploy:
        description: "The services that should be deployed"
        value: ${{ jobs.common-nx.outputs.services_to_deploy }}
      has_services_to_deploy:
        description: "If there are services to deploy"
        value: ${{ jobs.common-nx.outputs.has_services_to_deploy }}
      should_upload_website:
        description: "If the website needs to be synced to s3"
        value: ${{ jobs.common-nx.outputs.should_upload_website }}

jobs:
  common-nx:
    outputs:
      services_to_deploy: ${{ steps.affected.outputs.services_to_deploy }}
      has_services_to_deploy: ${{ steps.affected.outputs.has_services_to_deploy }}
      should_upload_website: ${{ steps.affected.outputs.should_upload_website }}
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ inputs.build_environment }}
      AWS_DEFAULT_ACCOUNT: ${{ inputs.aws_account }}
      AWS_DEFAULT_REGION: ${{ inputs.aws_region }}
      ACTOR_NAME: ${{ inputs.actor_name }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Setup the correct node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: "**/package-lock.json"
      - name: Provide credentials for private repo installs
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_SSH }}
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NX_RELEASE_SPACE: '"${{ inputs.release_space }}"'
          file_name: .env
          fail_on_empty: false

      - name: Create SHA's of head and base for affected to work
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{ inputs.target_branch_name }}
      - name: npm install for CI
        run: npm ci

      - name: Setting affected variables
        id: affected
        run: |
          affected="$(echo -n "$(npx nx print-affected --target=build --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} --configuration=${{ inputs.build_environment }} --select=projects)")"
          affected_services="$(echo -n $affected | tr ', ' '\n' | grep -E '.*-service$' | sed 's/-service$//' | paste -sd "," - | sed 's/,$//')"
          should_upload_website="$(echo -n $affected | tr ', ' '\n' | grep -E '^website$' | paste -sd "," - | sed 's/,$//')"
          echo "affected packages/libs: $affected"

          echo -ne "services_to_deploy=[" >> "$GITHUB_OUTPUT"
          echo -ne $affected_services  | sed -e 's/,$//' -e 's/,/","/g' -e 's/^/"/' -e 's/$/"/' >> "$GITHUB_OUTPUT"
          echo "]" >> "$GITHUB_OUTPUT"

          echo -ne "has_services_to_deploy=" >> "$GITHUB_OUTPUT"
          echo "$(if [ -z "$affected_services" ]; then echo "false"; else echo "true"; fi)" >> "$GITHUB_OUTPUT"

          echo -ne "should_upload_website=" >> "$GITHUB_OUTPUT"
          echo "$(if [ -z "$should_upload_website" ]; then echo "false"; else echo "true"; fi)" >> "$GITHUB_OUTPUT"
      - name: Print variables
        run: |
          echo "services_to_deploy: ${{ steps.affected.outputs.services_to_deploy }}"
          echo "has_services_to_deploy: ${{ steps.affected.outputs.has_services_to_deploy }}"
          echo "should_upload_website: ${{ steps.affected.outputs.should_upload_website }}"

      - name: Lint nx specific workspace files
        run: npx nx workspace-lint
      - name: Check for unformatted files
        run: npx nx format:check
      - name: Lint affected packages/libs
        run: npx nx affected --target=lint --head=${{ env.NX_HEAD }} --base=${{ env.NX_BASE }} --parallel=3
      - name: Test affected packages/libs
        run: npx nx affected --target=test --head=${{ env.NX_HEAD }} --base=${{ env.NX_BASE }} --parallel=3 --ci --code-coverage
      - name: Build affected packages/libs
        run: npx nx affected --target=build --head=${{ env.NX_HEAD }} --base=${{ env.NX_BASE }} --parallel=3 --configuration=${{ inputs.build_environment }}

      - name: Synth QPQ infrastructure
        run: npx nx synth services-deployment-awscdk

      - name: Upload the built output to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.cache_key }}
          retention-days: 1
          path: ${{ inputs.folder_path }}
          if-no-files-found: ignore
